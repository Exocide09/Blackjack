import pygame
import os
import random
from time import sleep as wait
pygame.init()
OLDCARDS = -1
pygame.display.set_caption('Blackjack')
clock = pygame.time.Clock()
base_dir = os.path.abspath(__file__)
asset_dir = os.path.join(os.path.dirname(__file__), "assets")
screen = pygame.display.set_mode((0,0), pygame.FULLSCREEN)
scr_width, scr_height = screen.get_size()
background = pygame.image.load( os.path.join(asset_dir, "background.png")).convert()
background = pygame.transform.scale(background,(scr_width,scr_height))
hit_playing = False
font = pygame.font.SysFont(None, 60)
possible_cards = [2,3,4,5,6,7,8,9,10,]
starting_card = int(random.choice(possible_cards))
total = int(starting_card)
dealer = 0
WHITE = 255,255,255
running = True
asking = False
new_card_shown = False
NEWCARDS = []
NEWCARDSDEALER = []
start_card_img = pygame.image.load(os.path.join(asset_dir, f"{starting_card}.png")).convert()
start_card_img = pygame.transform.scale(start_card_img,(scr_width/6, scr_height/4))
card_width, card_height = start_card_img.get_size()
hit_or_stay_txt = font.render("1:Hit \n2:Stay", False, WHITE)
new_card = random.choice(possible_cards)

def choice_1():
    global total
    global running
    global hit_playing
    global new_card_shown
    global new_card
    NEWCARDS
    new_card = int(random.choice(possible_cards))
    NEWCARDS.append(new_card)
    new_card_shown = True
    total = int(new_card) + total
    if total >21:
        screen.blit(font.render("Game Over",False, WHITE),(scr_width/3, scr_height/6))
        pygame.display.flip()
        running = False
        hit_playing = False
    hit_playing = False

def clear():
     global background
     global start_card_txt
     global hit_or_stay_img
     global card_width
     global card_height
     global new_card_shown
     screen.blit(background,(0,0))
     screen.blit(start_card_img,(scr_width/2-card_width,scr_height -card_height))        
     screen.blit(font.render(f"your total is {total}",False, WHITE),(0,60))
     screen.blit(hit_or_stay_txt,(0,120))
     for i in range(len(NEWCARDSDEALER)):
         new_card_img_dealer = pygame.image.load(os.path.join(asset_dir, f"{NEWCARDSDEALER[i]}.png")).convert()
         new_card_img_dealer = pygame.transform.scale(new_card_img_dealer,(scr_width/6, scr_height/4))
         screen.blit(new_card_img_dealer,(scr_width/2-card_width+(i+1)*30,0))
     for i in range(len(NEWCARDS)):
                new_card_img = pygame.image.load(os.path.join(asset_dir, f"{NEWCARDS[i]}.png")).convert()
                new_card_img = pygame.transform.scale(new_card_img,(scr_width/6, scr_height/4))
                screen.blit(new_card_img,(scr_width/2-card_width+(i+1)*30,scr_height -card_height))
     pygame.display.flip()

def choice_2():
    global dealer
    global possible_cards
    global running
    while not dealer >=17:
        clear()
        dealer_card = int(random.choice(possible_cards))
        NEWCARDSDEALER.append(dealer_card)
        screen.blit(font.render(f"Dealer got a {dealer_card}",False, WHITE),(scr_width/2, scr_height/2))
        pygame.display.flip()
        wait(1)
        dealer += dealer_card
        screen.blit(font.render(f"Dealer now has {dealer}",False, WHITE),(scr_width/2, scr_height/2+60))
        pygame.display.flip()
        wait(1)
    if dealer > 21:
        clear()
        screen.blit(font.render("You Win!",False, WHITE),(scr_width/3, scr_height/6))
        pygame.display.flip()
        wait(1)
        running = False
    elif dealer == 21:
        clear()
        screen.blit(font.render("Game Over",False, WHITE),(scr_width/3, scr_height/6))
        pygame.display.flip()
        wait(1)
        running = False
    elif dealer < 21:
        if dealer > total:
            clear()
            screen.blit(font.render("Game Over",False, WHITE),(scr_width/3, scr_height/6))
            pygame.display.flip()
            wait(1)
            running = False
        else:
            clear()
            screen.blit(font.render("You Win!",False, WHITE),(scr_width/3, scr_height/6))
            pygame.display.flip()
            wait(1)
            running = False

def ask():
    global NEWCARDS
    global NEWCARDSDEALER
    global running
    global total
    global dealer
    global starting_card
    global asking
    global new_card_shown
    global starting_card
    global start_card_img
    NEWCARDS = []
    clear()
    asking = True
    while asking:
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:     
                if event.key == pygame.K_y:
                    starting_card = int(random.choice(possible_cards))
                    start_card_img = pygame.image.load(os.path.join(asset_dir, f"{starting_card}.png")).convert()
                    start_card_img = pygame.transform.scale(start_card_img,(scr_width/6, scr_height/4))
                    total = starting_card
                    NEWCARDS = []
                    NEWCARDSDEALER = []
                    dealer = 0
                    new_card_shown = False
                    running = True
                    game()
                    asking = False
                elif event.key == pygame.K_n:
                    asking = False
        screen.blit(font.render("do you want to play again? (Y/N)",False, WHITE),(scr_width/3, scr_height/6))
        pygame.display.flip()

def game():
    OLDCARDS = -1
    global running
    global hit_playing
    while running:
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    running = False
                if event.key == pygame.K_1 and not hit_playing:
                    hit_playing = True
                    choice_1()
                if event.key == pygame.K_2:
                    choice_2()
        clear()
        clock.tick(60)
    ask()
game()
pygame.quit()
